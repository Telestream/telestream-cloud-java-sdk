/*
 * Notifications API
 * Notifications API V2
 *
 * OpenAPI spec version: 2.1.0
 * Contact: cloudsupport@telestream.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.telestream.cloud.notifications;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Topic
 */

public class Topic {
  @SerializedName("account")
  private String account = null;

  @SerializedName("service")
  private String service = null;

  @SerializedName("event")
  private String event = null;

  @SerializedName("project")
  private String project = null;

  @SerializedName("factory")
  private String factory = null;

   /**
   * [read-only] Account identifier connected to subscription notification 
   * @return account
  **/
  @ApiModelProperty(value = "[read-only] Account identifier connected to subscription notification ")
  public String getAccount() {
    return account;
  }

  public Topic service(String service) {
    this.service = service;
    return this;
  }

   /**
   * Name of service (qc, flip, tts) 
   * @return service
  **/
  @ApiModelProperty(required = true, value = "Name of service (qc, flip, tts) ")
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }

  public Topic event(String event) {
    this.event = event;
    return this;
  }

   /**
   * Name of the event;  Quality Control (media-passed, media-error, media-warning, media-rejected, media-canceled, job-created, job-progress), Flip (video-created, video-encoded, encoding-complete, encoding-progress), Transcription (job-created, job-completed, job-error, job-progress) 
   * @return event
  **/
  @ApiModelProperty(required = true, value = "Name of the event;  Quality Control (media-passed, media-error, media-warning, media-rejected, media-canceled, job-created, job-progress), Flip (video-created, video-encoded, encoding-complete, encoding-progress), Transcription (job-created, job-completed, job-error, job-progress) ")
  public String getEvent() {
    return event;
  }

  public void setEvent(String event) {
    this.event = event;
  }

  public Topic project(String project) {
    this.project = project;
    return this;
  }

   /**
   * (for tts, qc service); Project ID 
   * @return project
  **/
  @ApiModelProperty(value = "(for tts, qc service); Project ID ")
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }

  public Topic factory(String factory) {
    this.factory = factory;
    return this;
  }

   /**
   * (for flip service); Factory ID 
   * @return factory
  **/
  @ApiModelProperty(value = "(for flip service); Factory ID ")
  public String getFactory() {
    return factory;
  }

  public void setFactory(String factory) {
    this.factory = factory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Topic topic = (Topic) o;
    return Objects.equals(this.account, topic.account) &&
        Objects.equals(this.service, topic.service) &&
        Objects.equals(this.event, topic.event) &&
        Objects.equals(this.project, topic.project) &&
        Objects.equals(this.factory, topic.factory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, service, event, project, factory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Topic {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    factory: ").append(toIndentedString(factory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

