/*
 * Flip API
 * Description
 *
 * OpenAPI spec version: 3.1.0
 * Contact: cloudsupport@telestream.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.telestream.cloud.flip;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Factory
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-05T16:30:52.273+01:00")
public class Factory {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("factory_region")
  private String factoryRegion = null;

  @SerializedName("output_bucket_name")
  private String outputBucketName = null;

  /**
   * Specify if your files are public or private (private files need authorization url to access). By default this is not set.
   */
  @JsonAdapter(AclEnum.Adapter.class)
  public enum AclEnum {
    PUBLIC("public"),
    
    PRIVATE("private");

    private String value;

    AclEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AclEnum fromValue(String text) {
      for (AclEnum b : AclEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AclEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AclEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AclEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AclEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("acl")
  private AclEnum acl = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("updated_at")
  private String updatedAt = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("server_side_encryption")
  private Boolean serverSideEncryption = null;

  @SerializedName("input_bucket_name")
  private String inputBucketName = null;

  @SerializedName("input_bucket_watch")
  private Boolean inputBucketWatch = null;

  @SerializedName("input_bucket_files_map")
  private String inputBucketFilesMap = null;

  @SerializedName("input_bucket_sync_every_n_min")
  private String inputBucketSyncEveryNMin = null;

  @SerializedName("input_bucket_recursive")
  private String inputBucketRecursive = null;

  @SerializedName("input_bucket_file_pattern")
  private String inputBucketFilePattern = null;

  @SerializedName("outputs_path_format")
  private String outputsPathFormat = null;

  @SerializedName("storage_provider")
  private Integer storageProvider = null;

  @SerializedName("provider_specific_settings")
  private Object providerSpecificSettings = null;

  public Factory id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A unique identifier of a Factory.
   * @return id
  **/
  @ApiModelProperty(value = "A unique identifier of a Factory.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Factory name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Human-readable identifier of a Factory.
   * @return name
  **/
  @ApiModelProperty(value = "Human-readable identifier of a Factory.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Factory factoryRegion(String factoryRegion) {
    this.factoryRegion = factoryRegion;
    return this;
  }

   /**
   * A region where the factory is located.
   * @return factoryRegion
  **/
  @ApiModelProperty(value = "A region where the factory is located.")
  public String getFactoryRegion() {
    return factoryRegion;
  }

  public void setFactoryRegion(String factoryRegion) {
    this.factoryRegion = factoryRegion;
  }

  public Factory outputBucketName(String outputBucketName) {
    this.outputBucketName = outputBucketName;
    return this;
  }

   /**
   * A bucket where processed files will be stored.
   * @return outputBucketName
  **/
  @ApiModelProperty(value = "A bucket where processed files will be stored.")
  public String getOutputBucketName() {
    return outputBucketName;
  }

  public void setOutputBucketName(String outputBucketName) {
    this.outputBucketName = outputBucketName;
  }

  public Factory acl(AclEnum acl) {
    this.acl = acl;
    return this;
  }

   /**
   * Specify if your files are public or private (private files need authorization url to access). By default this is not set.
   * @return acl
  **/
  @ApiModelProperty(value = "Specify if your files are public or private (private files need authorization url to access). By default this is not set.")
  public AclEnum getAcl() {
    return acl;
  }

  public void setAcl(AclEnum acl) {
    this.acl = acl;
  }

  public Factory createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * A date and time when a Factory has been created.
   * @return createdAt
  **/
  @ApiModelProperty(value = "A date and time when a Factory has been created.")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Factory updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * A date and time when a Factory has been updated last time.
   * @return updatedAt
  **/
  @ApiModelProperty(value = "A date and time when a Factory has been updated last time.")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Factory url(String url) {
    this.url = url;
    return this;
  }

   /**
   * An URL pointing to the output_bucket_name.
   * @return url
  **/
  @ApiModelProperty(value = "An URL pointing to the output_bucket_name.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Factory serverSideEncryption(Boolean serverSideEncryption) {
    this.serverSideEncryption = serverSideEncryption;
    return this;
  }

   /**
   * Specify if you want to use multi-factor server-side 256-bit AES-256 data encryption with Amazon S3-managed encryption keys (SSE-S3). Each object is encrypted using a unique key which as an additional safeguard is encrypted itself with a master key that S3 regularly rotates. By default this is not set.
   * @return serverSideEncryption
  **/
  @ApiModelProperty(value = "Specify if you want to use multi-factor server-side 256-bit AES-256 data encryption with Amazon S3-managed encryption keys (SSE-S3). Each object is encrypted using a unique key which as an additional safeguard is encrypted itself with a master key that S3 regularly rotates. By default this is not set.")
  public Boolean getServerSideEncryption() {
    return serverSideEncryption;
  }

  public void setServerSideEncryption(Boolean serverSideEncryption) {
    this.serverSideEncryption = serverSideEncryption;
  }

  public Factory inputBucketName(String inputBucketName) {
    this.inputBucketName = inputBucketName;
    return this;
  }

   /**
   * A name of an input bucket.
   * @return inputBucketName
  **/
  @ApiModelProperty(value = "A name of an input bucket.")
  public String getInputBucketName() {
    return inputBucketName;
  }

  public void setInputBucketName(String inputBucketName) {
    this.inputBucketName = inputBucketName;
  }

  public Factory inputBucketWatch(Boolean inputBucketWatch) {
    this.inputBucketWatch = inputBucketWatch;
    return this;
  }

   /**
   * Determines whether the Factory should be notified about new files added to the input bucket.
   * @return inputBucketWatch
  **/
  @ApiModelProperty(value = "Determines whether the Factory should be notified about new files added to the input bucket.")
  public Boolean getInputBucketWatch() {
    return inputBucketWatch;
  }

  public void setInputBucketWatch(Boolean inputBucketWatch) {
    this.inputBucketWatch = inputBucketWatch;
  }

  public Factory inputBucketFilesMap(String inputBucketFilesMap) {
    this.inputBucketFilesMap = inputBucketFilesMap;
    return this;
  }

   /**
   * Get inputBucketFilesMap
   * @return inputBucketFilesMap
  **/
  @ApiModelProperty(value = "")
  public String getInputBucketFilesMap() {
    return inputBucketFilesMap;
  }

  public void setInputBucketFilesMap(String inputBucketFilesMap) {
    this.inputBucketFilesMap = inputBucketFilesMap;
  }

  public Factory inputBucketSyncEveryNMin(String inputBucketSyncEveryNMin) {
    this.inputBucketSyncEveryNMin = inputBucketSyncEveryNMin;
    return this;
  }

   /**
   * Determines how often the input bucket is synchronised.
   * @return inputBucketSyncEveryNMin
  **/
  @ApiModelProperty(value = "Determines how often the input bucket is synchronised.")
  public String getInputBucketSyncEveryNMin() {
    return inputBucketSyncEveryNMin;
  }

  public void setInputBucketSyncEveryNMin(String inputBucketSyncEveryNMin) {
    this.inputBucketSyncEveryNMin = inputBucketSyncEveryNMin;
  }

  public Factory inputBucketRecursive(String inputBucketRecursive) {
    this.inputBucketRecursive = inputBucketRecursive;
    return this;
  }

   /**
   * Get inputBucketRecursive
   * @return inputBucketRecursive
  **/
  @ApiModelProperty(value = "")
  public String getInputBucketRecursive() {
    return inputBucketRecursive;
  }

  public void setInputBucketRecursive(String inputBucketRecursive) {
    this.inputBucketRecursive = inputBucketRecursive;
  }

  public Factory inputBucketFilePattern(String inputBucketFilePattern) {
    this.inputBucketFilePattern = inputBucketFilePattern;
    return this;
  }

   /**
   * A pattern that will be used to locate files in the input bucket. Valid wildcards might be used.
   * @return inputBucketFilePattern
  **/
  @ApiModelProperty(value = "A pattern that will be used to locate files in the input bucket. Valid wildcards might be used.")
  public String getInputBucketFilePattern() {
    return inputBucketFilePattern;
  }

  public void setInputBucketFilePattern(String inputBucketFilePattern) {
    this.inputBucketFilePattern = inputBucketFilePattern;
  }

  public Factory outputsPathFormat(String outputsPathFormat) {
    this.outputsPathFormat = outputsPathFormat;
    return this;
  }

   /**
   * Get outputsPathFormat
   * @return outputsPathFormat
  **/
  @ApiModelProperty(value = "")
  public String getOutputsPathFormat() {
    return outputsPathFormat;
  }

  public void setOutputsPathFormat(String outputsPathFormat) {
    this.outputsPathFormat = outputsPathFormat;
  }

  public Factory storageProvider(Integer storageProvider) {
    this.storageProvider = storageProvider;
    return this;
  }

   /**
   * Specifies which storage provider the factory should use. Available options: S3: 0, Google Cloud Storage: 1, FTP storage: 2, Google Cloud Interoperability Storage: 5, Flip storage: 7, FASP storage: 8, Azure Blob Storage: 9
   * @return storageProvider
  **/
  @ApiModelProperty(value = "Specifies which storage provider the factory should use. Available options: S3: 0, Google Cloud Storage: 1, FTP storage: 2, Google Cloud Interoperability Storage: 5, Flip storage: 7, FASP storage: 8, Azure Blob Storage: 9")
  public Integer getStorageProvider() {
    return storageProvider;
  }

  public void setStorageProvider(Integer storageProvider) {
    this.storageProvider = storageProvider;
  }

  public Factory providerSpecificSettings(Object providerSpecificSettings) {
    this.providerSpecificSettings = providerSpecificSettings;
    return this;
  }

   /**
   * Get providerSpecificSettings
   * @return providerSpecificSettings
  **/
  @ApiModelProperty(value = "")
  public Object getProviderSpecificSettings() {
    return providerSpecificSettings;
  }

  public void setProviderSpecificSettings(Object providerSpecificSettings) {
    this.providerSpecificSettings = providerSpecificSettings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Factory factory = (Factory) o;
    return Objects.equals(this.id, factory.id) &&
        Objects.equals(this.name, factory.name) &&
        Objects.equals(this.factoryRegion, factory.factoryRegion) &&
        Objects.equals(this.outputBucketName, factory.outputBucketName) &&
        Objects.equals(this.acl, factory.acl) &&
        Objects.equals(this.createdAt, factory.createdAt) &&
        Objects.equals(this.updatedAt, factory.updatedAt) &&
        Objects.equals(this.url, factory.url) &&
        Objects.equals(this.serverSideEncryption, factory.serverSideEncryption) &&
        Objects.equals(this.inputBucketName, factory.inputBucketName) &&
        Objects.equals(this.inputBucketWatch, factory.inputBucketWatch) &&
        Objects.equals(this.inputBucketFilesMap, factory.inputBucketFilesMap) &&
        Objects.equals(this.inputBucketSyncEveryNMin, factory.inputBucketSyncEveryNMin) &&
        Objects.equals(this.inputBucketRecursive, factory.inputBucketRecursive) &&
        Objects.equals(this.inputBucketFilePattern, factory.inputBucketFilePattern) &&
        Objects.equals(this.outputsPathFormat, factory.outputsPathFormat) &&
        Objects.equals(this.storageProvider, factory.storageProvider) &&
        Objects.equals(this.providerSpecificSettings, factory.providerSpecificSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, factoryRegion, outputBucketName, acl, createdAt, updatedAt, url, serverSideEncryption, inputBucketName, inputBucketWatch, inputBucketFilesMap, inputBucketSyncEveryNMin, inputBucketRecursive, inputBucketFilePattern, outputsPathFormat, storageProvider, providerSpecificSettings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Factory {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    factoryRegion: ").append(toIndentedString(factoryRegion)).append("\n");
    sb.append("    outputBucketName: ").append(toIndentedString(outputBucketName)).append("\n");
    sb.append("    acl: ").append(toIndentedString(acl)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    serverSideEncryption: ").append(toIndentedString(serverSideEncryption)).append("\n");
    sb.append("    inputBucketName: ").append(toIndentedString(inputBucketName)).append("\n");
    sb.append("    inputBucketWatch: ").append(toIndentedString(inputBucketWatch)).append("\n");
    sb.append("    inputBucketFilesMap: ").append(toIndentedString(inputBucketFilesMap)).append("\n");
    sb.append("    inputBucketSyncEveryNMin: ").append(toIndentedString(inputBucketSyncEveryNMin)).append("\n");
    sb.append("    inputBucketRecursive: ").append(toIndentedString(inputBucketRecursive)).append("\n");
    sb.append("    inputBucketFilePattern: ").append(toIndentedString(inputBucketFilePattern)).append("\n");
    sb.append("    outputsPathFormat: ").append(toIndentedString(outputsPathFormat)).append("\n");
    sb.append("    storageProvider: ").append(toIndentedString(storageProvider)).append("\n");
    sb.append("    providerSpecificSettings: ").append(toIndentedString(providerSpecificSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

