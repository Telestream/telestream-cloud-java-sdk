/*
 * Flip API
 * Description
 *
 * OpenAPI spec version: 2.0.1
 * Contact: cloudsupport@telestream.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.telestream.cloud.flip;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import net.telestream.cloud.flip.FactoryBodyStorageCredentialAttributes;

/**
 * FactoryBody
 */

public class FactoryBody {
  @SerializedName("aws_access_key")
  private String awsAccessKey = null;

  @SerializedName("aws_secret_key")
  private String awsSecretKey = null;

  @SerializedName("factory_region")
  private String factoryRegion = null;

  @SerializedName("input_bucket_file_pattern")
  private String inputBucketFilePattern = null;

  @SerializedName("input_bucket_name")
  private String inputBucketName = null;

  @SerializedName("input_bucket_recursive")
  private Boolean inputBucketRecursive = null;

  @SerializedName("input_bucket_sync_every_n_min")
  private Integer inputBucketSyncEveryNMin = null;

  @SerializedName("input_bucket_watch")
  private Boolean inputBucketWatch = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("outputs_path_format")
  private String outputsPathFormat = null;

  @SerializedName("provider_specific_settings")
  private Object providerSpecificSettings = null;

  /**
   * Specify if your files are public or private (private files need authorization url to access). By default this is not set.
   */
  @JsonAdapter(AclEnum.Adapter.class)
  public enum AclEnum {
    PUBLIC("public"),
    
    PRIVATE("private");

    private String value;

    AclEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AclEnum fromValue(String text) {
      for (AclEnum b : AclEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AclEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AclEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AclEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AclEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("acl")
  private AclEnum acl = null;

  @SerializedName("output_bucket_name")
  private String outputBucketName = null;

  @SerializedName("server_side_encryption")
  private Boolean serverSideEncryption = null;

  @SerializedName("storage_credential_attributes")
  private FactoryBodyStorageCredentialAttributes storageCredentialAttributes = null;

  @SerializedName("storage_provider")
  private Integer storageProvider = null;

  public FactoryBody awsAccessKey(String awsAccessKey) {
    this.awsAccessKey = awsAccessKey;
    return this;
  }

   /**
   * AWS access key.
   * @return awsAccessKey
  **/
  @ApiModelProperty(value = "AWS access key.")
  public String getAwsAccessKey() {
    return awsAccessKey;
  }

  public void setAwsAccessKey(String awsAccessKey) {
    this.awsAccessKey = awsAccessKey;
  }

  public FactoryBody awsSecretKey(String awsSecretKey) {
    this.awsSecretKey = awsSecretKey;
    return this;
  }

   /**
   * AWS secret key.
   * @return awsSecretKey
  **/
  @ApiModelProperty(value = "AWS secret key.")
  public String getAwsSecretKey() {
    return awsSecretKey;
  }

  public void setAwsSecretKey(String awsSecretKey) {
    this.awsSecretKey = awsSecretKey;
  }

  public FactoryBody factoryRegion(String factoryRegion) {
    this.factoryRegion = factoryRegion;
    return this;
  }

   /**
   * A region where the factory is located.
   * @return factoryRegion
  **/
  @ApiModelProperty(value = "A region where the factory is located.")
  public String getFactoryRegion() {
    return factoryRegion;
  }

  public void setFactoryRegion(String factoryRegion) {
    this.factoryRegion = factoryRegion;
  }

  public FactoryBody inputBucketFilePattern(String inputBucketFilePattern) {
    this.inputBucketFilePattern = inputBucketFilePattern;
    return this;
  }

   /**
   * A pattern that will be used to locate files in the input bucket. Valid wildcards might be used.
   * @return inputBucketFilePattern
  **/
  @ApiModelProperty(value = "A pattern that will be used to locate files in the input bucket. Valid wildcards might be used.")
  public String getInputBucketFilePattern() {
    return inputBucketFilePattern;
  }

  public void setInputBucketFilePattern(String inputBucketFilePattern) {
    this.inputBucketFilePattern = inputBucketFilePattern;
  }

  public FactoryBody inputBucketName(String inputBucketName) {
    this.inputBucketName = inputBucketName;
    return this;
  }

   /**
   * A name of an input bucket.
   * @return inputBucketName
  **/
  @ApiModelProperty(value = "A name of an input bucket.")
  public String getInputBucketName() {
    return inputBucketName;
  }

  public void setInputBucketName(String inputBucketName) {
    this.inputBucketName = inputBucketName;
  }

  public FactoryBody inputBucketRecursive(Boolean inputBucketRecursive) {
    this.inputBucketRecursive = inputBucketRecursive;
    return this;
  }

   /**
   * Get inputBucketRecursive
   * @return inputBucketRecursive
  **/
  @ApiModelProperty(value = "")
  public Boolean isInputBucketRecursive() {
    return inputBucketRecursive;
  }

  public void setInputBucketRecursive(Boolean inputBucketRecursive) {
    this.inputBucketRecursive = inputBucketRecursive;
  }

  public FactoryBody inputBucketSyncEveryNMin(Integer inputBucketSyncEveryNMin) {
    this.inputBucketSyncEveryNMin = inputBucketSyncEveryNMin;
    return this;
  }

   /**
   * Determines how often the input bucket is synchronised.
   * @return inputBucketSyncEveryNMin
  **/
  @ApiModelProperty(value = "Determines how often the input bucket is synchronised.")
  public Integer getInputBucketSyncEveryNMin() {
    return inputBucketSyncEveryNMin;
  }

  public void setInputBucketSyncEveryNMin(Integer inputBucketSyncEveryNMin) {
    this.inputBucketSyncEveryNMin = inputBucketSyncEveryNMin;
  }

  public FactoryBody inputBucketWatch(Boolean inputBucketWatch) {
    this.inputBucketWatch = inputBucketWatch;
    return this;
  }

   /**
   * Determines whether the Factory should be notified about new files added to the input bucket.
   * @return inputBucketWatch
  **/
  @ApiModelProperty(value = "Determines whether the Factory should be notified about new files added to the input bucket.")
  public Boolean isInputBucketWatch() {
    return inputBucketWatch;
  }

  public void setInputBucketWatch(Boolean inputBucketWatch) {
    this.inputBucketWatch = inputBucketWatch;
  }

  public FactoryBody name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the Factory.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the Factory.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FactoryBody outputsPathFormat(String outputsPathFormat) {
    this.outputsPathFormat = outputsPathFormat;
    return this;
  }

   /**
   * Specify the directory where the output files should be stored. By default it is not set. More info [here](https://cloud.telestream.net/docs#path-format---know-how).
   * @return outputsPathFormat
  **/
  @ApiModelProperty(value = "Specify the directory where the output files should be stored. By default it is not set. More info [here](https://cloud.telestream.net/docs#path-format---know-how).")
  public String getOutputsPathFormat() {
    return outputsPathFormat;
  }

  public void setOutputsPathFormat(String outputsPathFormat) {
    this.outputsPathFormat = outputsPathFormat;
  }

  public FactoryBody providerSpecificSettings(Object providerSpecificSettings) {
    this.providerSpecificSettings = providerSpecificSettings;
    return this;
  }

   /**
   * Get providerSpecificSettings
   * @return providerSpecificSettings
  **/
  @ApiModelProperty(value = "")
  public Object getProviderSpecificSettings() {
    return providerSpecificSettings;
  }

  public void setProviderSpecificSettings(Object providerSpecificSettings) {
    this.providerSpecificSettings = providerSpecificSettings;
  }

  public FactoryBody acl(AclEnum acl) {
    this.acl = acl;
    return this;
  }

   /**
   * Specify if your files are public or private (private files need authorization url to access). By default this is not set.
   * @return acl
  **/
  @ApiModelProperty(value = "Specify if your files are public or private (private files need authorization url to access). By default this is not set.")
  public AclEnum getAcl() {
    return acl;
  }

  public void setAcl(AclEnum acl) {
    this.acl = acl;
  }

  public FactoryBody outputBucketName(String outputBucketName) {
    this.outputBucketName = outputBucketName;
    return this;
  }

   /**
   * A bucket where processed files will be stored.
   * @return outputBucketName
  **/
  @ApiModelProperty(value = "A bucket where processed files will be stored.")
  public String getOutputBucketName() {
    return outputBucketName;
  }

  public void setOutputBucketName(String outputBucketName) {
    this.outputBucketName = outputBucketName;
  }

  public FactoryBody serverSideEncryption(Boolean serverSideEncryption) {
    this.serverSideEncryption = serverSideEncryption;
    return this;
  }

   /**
   * Specify if you want to use multi-factor server-side 256-bit AES-256 data encryption with Amazon S3-managed encryption keys (SSE-S3). Each object is encrypted using a unique key which as an additional safeguard is encrypted itself with a master key that S3 regularly rotates. By default this is not set.
   * @return serverSideEncryption
  **/
  @ApiModelProperty(value = "Specify if you want to use multi-factor server-side 256-bit AES-256 data encryption with Amazon S3-managed encryption keys (SSE-S3). Each object is encrypted using a unique key which as an additional safeguard is encrypted itself with a master key that S3 regularly rotates. By default this is not set.")
  public Boolean isServerSideEncryption() {
    return serverSideEncryption;
  }

  public void setServerSideEncryption(Boolean serverSideEncryption) {
    this.serverSideEncryption = serverSideEncryption;
  }

  public FactoryBody storageCredentialAttributes(FactoryBodyStorageCredentialAttributes storageCredentialAttributes) {
    this.storageCredentialAttributes = storageCredentialAttributes;
    return this;
  }

   /**
   * Get storageCredentialAttributes
   * @return storageCredentialAttributes
  **/
  @ApiModelProperty(value = "")
  public FactoryBodyStorageCredentialAttributes getStorageCredentialAttributes() {
    return storageCredentialAttributes;
  }

  public void setStorageCredentialAttributes(FactoryBodyStorageCredentialAttributes storageCredentialAttributes) {
    this.storageCredentialAttributes = storageCredentialAttributes;
  }

  public FactoryBody storageProvider(Integer storageProvider) {
    this.storageProvider = storageProvider;
    return this;
  }

   /**
   * Specifies which storage provider the factory should use. Available options: S3: 0, Google Cloud Storage: 1, FTP storage: 2, Google Cloud Interoperability Storage: 5, Flip storage: 7, FASP storage: 8, Azure Blob Storage: 9
   * @return storageProvider
  **/
  @ApiModelProperty(value = "Specifies which storage provider the factory should use. Available options: S3: 0, Google Cloud Storage: 1, FTP storage: 2, Google Cloud Interoperability Storage: 5, Flip storage: 7, FASP storage: 8, Azure Blob Storage: 9")
  public Integer getStorageProvider() {
    return storageProvider;
  }

  public void setStorageProvider(Integer storageProvider) {
    this.storageProvider = storageProvider;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactoryBody factoryBody = (FactoryBody) o;
    return Objects.equals(this.awsAccessKey, factoryBody.awsAccessKey) &&
        Objects.equals(this.awsSecretKey, factoryBody.awsSecretKey) &&
        Objects.equals(this.factoryRegion, factoryBody.factoryRegion) &&
        Objects.equals(this.inputBucketFilePattern, factoryBody.inputBucketFilePattern) &&
        Objects.equals(this.inputBucketName, factoryBody.inputBucketName) &&
        Objects.equals(this.inputBucketRecursive, factoryBody.inputBucketRecursive) &&
        Objects.equals(this.inputBucketSyncEveryNMin, factoryBody.inputBucketSyncEveryNMin) &&
        Objects.equals(this.inputBucketWatch, factoryBody.inputBucketWatch) &&
        Objects.equals(this.name, factoryBody.name) &&
        Objects.equals(this.outputsPathFormat, factoryBody.outputsPathFormat) &&
        Objects.equals(this.providerSpecificSettings, factoryBody.providerSpecificSettings) &&
        Objects.equals(this.acl, factoryBody.acl) &&
        Objects.equals(this.outputBucketName, factoryBody.outputBucketName) &&
        Objects.equals(this.serverSideEncryption, factoryBody.serverSideEncryption) &&
        Objects.equals(this.storageCredentialAttributes, factoryBody.storageCredentialAttributes) &&
        Objects.equals(this.storageProvider, factoryBody.storageProvider);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsAccessKey, awsSecretKey, factoryRegion, inputBucketFilePattern, inputBucketName, inputBucketRecursive, inputBucketSyncEveryNMin, inputBucketWatch, name, outputsPathFormat, providerSpecificSettings, acl, outputBucketName, serverSideEncryption, storageCredentialAttributes, storageProvider);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactoryBody {\n");
    
    sb.append("    awsAccessKey: ").append(toIndentedString(awsAccessKey)).append("\n");
    sb.append("    awsSecretKey: ").append(toIndentedString(awsSecretKey)).append("\n");
    sb.append("    factoryRegion: ").append(toIndentedString(factoryRegion)).append("\n");
    sb.append("    inputBucketFilePattern: ").append(toIndentedString(inputBucketFilePattern)).append("\n");
    sb.append("    inputBucketName: ").append(toIndentedString(inputBucketName)).append("\n");
    sb.append("    inputBucketRecursive: ").append(toIndentedString(inputBucketRecursive)).append("\n");
    sb.append("    inputBucketSyncEveryNMin: ").append(toIndentedString(inputBucketSyncEveryNMin)).append("\n");
    sb.append("    inputBucketWatch: ").append(toIndentedString(inputBucketWatch)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    outputsPathFormat: ").append(toIndentedString(outputsPathFormat)).append("\n");
    sb.append("    providerSpecificSettings: ").append(toIndentedString(providerSpecificSettings)).append("\n");
    sb.append("    acl: ").append(toIndentedString(acl)).append("\n");
    sb.append("    outputBucketName: ").append(toIndentedString(outputBucketName)).append("\n");
    sb.append("    serverSideEncryption: ").append(toIndentedString(serverSideEncryption)).append("\n");
    sb.append("    storageCredentialAttributes: ").append(toIndentedString(storageCredentialAttributes)).append("\n");
    sb.append("    storageProvider: ").append(toIndentedString(storageProvider)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

