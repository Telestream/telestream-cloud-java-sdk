/*
 * Flip API
 * Description
 *
 * OpenAPI spec version: 2.0.1
 * Contact: cloudsupport@telestream.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.telestream.cloud.flip;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * CreateVideoBody
 */

public class CreateVideoBody {
  @SerializedName("source_url")
  private String sourceUrl = null;

  @SerializedName("profiles")
  private String profiles = null;

  @SerializedName("payload")
  private String payload = null;

  @SerializedName("pipeline")
  private String pipeline = null;

  @SerializedName("subtitle_files")
  private List<String> subtitleFiles = null;

  @SerializedName("extra_files")
  private Map<String, List<String>> extraFiles = null;

  @SerializedName("extra_variables")
  private Map<String, String> extraVariables = null;

  @SerializedName("path_format")
  private String pathFormat = null;

  @SerializedName("clip_end")
  private String clipEnd = null;

  @SerializedName("clip_length")
  private String clipLength = null;

  @SerializedName("clip_offset")
  private String clipOffset = null;

  @SerializedName("starting_timecode")
  private String startingTimecode = null;

  public CreateVideoBody sourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
    return this;
  }

   /**
   * An URL pointing to a source file.
   * @return sourceUrl
  **/
  @ApiModelProperty(value = "An URL pointing to a source file.")
  public String getSourceUrl() {
    return sourceUrl;
  }

  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }

  public CreateVideoBody profiles(String profiles) {
    this.profiles = profiles;
    return this;
  }

   /**
   * Comma-separated list of profile names or IDs to be used during encoding. Alternatively, specify none so no encodings are created yet.
   * @return profiles
  **/
  @ApiModelProperty(value = "Comma-separated list of profile names or IDs to be used during encoding. Alternatively, specify none so no encodings are created yet.")
  public String getProfiles() {
    return profiles;
  }

  public void setProfiles(String profiles) {
    this.profiles = profiles;
  }

  public CreateVideoBody payload(String payload) {
    this.payload = payload;
    return this;
  }

   /**
   * Arbitrary string stored along the Video object.
   * @return payload
  **/
  @ApiModelProperty(value = "Arbitrary string stored along the Video object.")
  public String getPayload() {
    return payload;
  }

  public void setPayload(String payload) {
    this.payload = payload;
  }

  public CreateVideoBody pipeline(String pipeline) {
    this.pipeline = pipeline;
    return this;
  }

   /**
   * String-encoded JSON describing profiles pipeline.
   * @return pipeline
  **/
  @ApiModelProperty(value = "String-encoded JSON describing profiles pipeline.")
  public String getPipeline() {
    return pipeline;
  }

  public void setPipeline(String pipeline) {
    this.pipeline = pipeline;
  }

  public CreateVideoBody subtitleFiles(List<String> subtitleFiles) {
    this.subtitleFiles = subtitleFiles;
    return this;
  }

  public CreateVideoBody addSubtitleFilesItem(String subtitleFilesItem) {
    if (this.subtitleFiles == null) {
      this.subtitleFiles = new ArrayList<String>();
    }
    this.subtitleFiles.add(subtitleFilesItem);
    return this;
  }

   /**
   * A list of urls pointing to remote subtitle files.
   * @return subtitleFiles
  **/
  @ApiModelProperty(value = "A list of urls pointing to remote subtitle files.")
  public List<String> getSubtitleFiles() {
    return subtitleFiles;
  }

  public void setSubtitleFiles(List<String> subtitleFiles) {
    this.subtitleFiles = subtitleFiles;
  }

  public CreateVideoBody extraFiles(Map<String, List<String>> extraFiles) {
    this.extraFiles = extraFiles;
    return this;
  }

  public CreateVideoBody putExtraFilesItem(String key, List<String> extraFilesItem) {
    if (this.extraFiles == null) {
      this.extraFiles = new HashMap<String, List<String>>();
    }
    this.extraFiles.put(key, extraFilesItem);
    return this;
  }

   /**
   * Get extraFiles
   * @return extraFiles
  **/
  @ApiModelProperty(value = "")
  public Map<String, List<String>> getExtraFiles() {
    return extraFiles;
  }

  public void setExtraFiles(Map<String, List<String>> extraFiles) {
    this.extraFiles = extraFiles;
  }

  public CreateVideoBody extraVariables(Map<String, String> extraVariables) {
    this.extraVariables = extraVariables;
    return this;
  }

  public CreateVideoBody putExtraVariablesItem(String key, String extraVariablesItem) {
    if (this.extraVariables == null) {
      this.extraVariables = new HashMap<String, String>();
    }
    this.extraVariables.put(key, extraVariablesItem);
    return this;
  }

   /**
   * Get extraVariables
   * @return extraVariables
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getExtraVariables() {
    return extraVariables;
  }

  public void setExtraVariables(Map<String, String> extraVariables) {
    this.extraVariables = extraVariables;
  }

  public CreateVideoBody pathFormat(String pathFormat) {
    this.pathFormat = pathFormat;
    return this;
  }

   /**
   * Get pathFormat
   * @return pathFormat
  **/
  @ApiModelProperty(value = "")
  public String getPathFormat() {
    return pathFormat;
  }

  public void setPathFormat(String pathFormat) {
    this.pathFormat = pathFormat;
  }

  public CreateVideoBody clipEnd(String clipEnd) {
    this.clipEnd = clipEnd;
    return this;
  }

   /**
   * Clip ends at a specific time.
   * @return clipEnd
  **/
  @ApiModelProperty(example = "00:32:16", value = "Clip ends at a specific time.")
  public String getClipEnd() {
    return clipEnd;
  }

  public void setClipEnd(String clipEnd) {
    this.clipEnd = clipEnd;
  }

  public CreateVideoBody clipLength(String clipLength) {
    this.clipLength = clipLength;
    return this;
  }

   /**
   * A clip’s duration.
   * @return clipLength
  **/
  @ApiModelProperty(example = "00:20:00", value = "A clip’s duration.")
  public String getClipLength() {
    return clipLength;
  }

  public void setClipLength(String clipLength) {
    this.clipLength = clipLength;
  }

  public CreateVideoBody clipOffset(String clipOffset) {
    this.clipOffset = clipOffset;
    return this;
  }

   /**
   * Clip starts at a specific offset.
   * @return clipOffset
  **/
  @ApiModelProperty(example = "00:00:10", value = "Clip starts at a specific offset.")
  public String getClipOffset() {
    return clipOffset;
  }

  public void setClipOffset(String clipOffset) {
    this.clipOffset = clipOffset;
  }

  public CreateVideoBody startingTimecode(String startingTimecode) {
    this.startingTimecode = startingTimecode;
    return this;
  }

   /**
   * Get startingTimecode
   * @return startingTimecode
  **/
  @ApiModelProperty(value = "")
  public String getStartingTimecode() {
    return startingTimecode;
  }

  public void setStartingTimecode(String startingTimecode) {
    this.startingTimecode = startingTimecode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateVideoBody createVideoBody = (CreateVideoBody) o;
    return Objects.equals(this.sourceUrl, createVideoBody.sourceUrl) &&
        Objects.equals(this.profiles, createVideoBody.profiles) &&
        Objects.equals(this.payload, createVideoBody.payload) &&
        Objects.equals(this.pipeline, createVideoBody.pipeline) &&
        Objects.equals(this.subtitleFiles, createVideoBody.subtitleFiles) &&
        Objects.equals(this.extraFiles, createVideoBody.extraFiles) &&
        Objects.equals(this.extraVariables, createVideoBody.extraVariables) &&
        Objects.equals(this.pathFormat, createVideoBody.pathFormat) &&
        Objects.equals(this.clipEnd, createVideoBody.clipEnd) &&
        Objects.equals(this.clipLength, createVideoBody.clipLength) &&
        Objects.equals(this.clipOffset, createVideoBody.clipOffset) &&
        Objects.equals(this.startingTimecode, createVideoBody.startingTimecode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceUrl, profiles, payload, pipeline, subtitleFiles, extraFiles, extraVariables, pathFormat, clipEnd, clipLength, clipOffset, startingTimecode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateVideoBody {\n");
    
    sb.append("    sourceUrl: ").append(toIndentedString(sourceUrl)).append("\n");
    sb.append("    profiles: ").append(toIndentedString(profiles)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    pipeline: ").append(toIndentedString(pipeline)).append("\n");
    sb.append("    subtitleFiles: ").append(toIndentedString(subtitleFiles)).append("\n");
    sb.append("    extraFiles: ").append(toIndentedString(extraFiles)).append("\n");
    sb.append("    extraVariables: ").append(toIndentedString(extraVariables)).append("\n");
    sb.append("    pathFormat: ").append(toIndentedString(pathFormat)).append("\n");
    sb.append("    clipEnd: ").append(toIndentedString(clipEnd)).append("\n");
    sb.append("    clipLength: ").append(toIndentedString(clipLength)).append("\n");
    sb.append("    clipOffset: ").append(toIndentedString(clipOffset)).append("\n");
    sb.append("    startingTimecode: ").append(toIndentedString(startingTimecode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

